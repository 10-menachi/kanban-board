"use strict";(self.webpackChunkkanban_board_1=self.webpackChunkkanban_board_1||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,"* {\n  font-family: 'Oswald', sans-serif;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  padding: 1px;\n  background-color: rgb(173, 238, 247);\n  width: 100%;\n}\n\nheader {\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  padding: 20px 10%;\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  gap: 3rem;\n}\n\n.nav {\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n}\n\n.nav-item {\n  font-weight: 600;\n  font-size: 1.2rem;\n  color: #000;\n  text-decoration: none;\n  transition: all 0.3s ease-in-out;\n}\n\n.logo img {\n  height: 5rem;\n  object-fit: contain;\n}\n\n.footer {\n  padding-block: 10px;\n  padding-inline: 20px;\n  border: 3px solid black;\n  display: flex;\n  justify-content: space-between;\n  background-color: rgb(187, 231, 238);\n  margin-top: auto;\n}\n\n.svg {\n  margin-block: auto;\n}\n\n.footer-row {\n  display: flex;\n  gap: 20px;\n}\n\n.footer-row svg {\n  height: 30px;\n  width: 30px;\n}\n\n.display-items {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2%;\n  padding: 7%;\n  margin-right: 30%;\n  margin-bottom: 4rem;\n}\n\n.item {\n  width: 380px;\n  height: 400px;\n\n  /* border-radius: 2rem; */\n  box-shadow: 0 4px 21px -1px rgba(6, 177, 154, 0.79);\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.food-image {\n  width: 90%;\n  margin-bottom: 0.5rem;\n}\n\n.image-comment {\n  display: flex;\n}\n\n.food-title {\n  margin-left: 1rem;\n}\n\n.like {\n  display: flex;\n  flex-flow: column;\n  align-items: flex-end;\n  margin-right: 3rem;\n  margin-top: -2rem;\n}\n\n.likes {\n  font-size: 15px;\n  margin-left: 19rem;\n}\n\n#comment,\n#reservation {\n  background-color: rgb(20, 75, 63);\n  color: rgb(231, 219, 195);\n  align-items: center;\n  text-align: center;\n  padding: 1%;\n  font-size: 25px;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  margin-left: 140px;\n  margin-top: 10px;\n}\n\n.heart {\n  width: 20px;\n  height: 30px;\n}\n\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 6rem;\n  overflow: scroll;\n}\n\n.hide {\n  display: none;\n}\n\n.popup-inside {\n  background-color: #fff;\n  max-width: 100%;\n  width: 600px;\n  padding: 30px 50px;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  text-align: center;\n}\n\n.close-div {\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  margin-top: 5rem;\n}\n\n.popup-inside i {\n  font-weight: 600;\n  font-size: 1.2rem;\n  color: #000;\n  cursor: pointer;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 1rem;\n  align-items: center;\n  justify-content: stretch;\n}\n\ntextarea {\n  background-color: #fff;\n  border: 1px solid #000;\n}\n\nbutton {\n  background-color: rgb(20, 75, 63);\n  color: rgb(231, 219, 195);\n  align-items: center;\n  text-align: center;\n  padding: 1rem;\n  font-size: 25px;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,iCAAiC;EACjC,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,iBAAiB;EACjB,YAAY;EACZ,oCAAoC;EACpC,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,iBAAiB;EACjB,sBAAsB;EACtB,uCAAuC;EACvC,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,WAAW;EACX,qBAAqB;EACrB,gCAAgC;AAClC;;AAEA;EACE,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,oBAAoB;EACpB,uBAAuB;EACvB,aAAa;EACb,8BAA8B;EAC9B,oCAAoC;EACpC,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,OAAO;EACP,WAAW;EACX,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;;EAEb,yBAAyB;EACzB,mDAAmD;EACnD,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,qBAAqB;AACvB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,qBAAqB;EACrB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;;EAEE,iCAAiC;EACjC,yBAAyB;EACzB,mBAAmB;EACnB,kBAAkB;EAClB,WAAW;EACX,eAAe;EACf,qBAAqB;EACrB,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,eAAe;EACf,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,mCAAmC;EACnC,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,sBAAsB;EACtB,eAAe;EACf,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,wCAAwC;EACxC,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,oBAAoB;EACpB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,gBAAgB;EAChB,mBAAmB;EACnB,wBAAwB;AAC1B;;AAEA;EACE,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,yBAAyB;EACzB,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,eAAe;EACf,qBAAqB;EACrB,YAAY;EACZ,eAAe;EACf,kBAAkB;AACpB",sourcesContent:["* {\n  font-family: 'Oswald', sans-serif;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  padding: 1px;\n  background-color: rgb(173, 238, 247);\n  width: 100%;\n}\n\nheader {\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  padding: 20px 10%;\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  gap: 3rem;\n}\n\n.nav {\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n}\n\n.nav-item {\n  font-weight: 600;\n  font-size: 1.2rem;\n  color: #000;\n  text-decoration: none;\n  transition: all 0.3s ease-in-out;\n}\n\n.logo img {\n  height: 5rem;\n  object-fit: contain;\n}\n\n.footer {\n  padding-block: 10px;\n  padding-inline: 20px;\n  border: 3px solid black;\n  display: flex;\n  justify-content: space-between;\n  background-color: rgb(187, 231, 238);\n  margin-top: auto;\n}\n\n.svg {\n  margin-block: auto;\n}\n\n.footer-row {\n  display: flex;\n  gap: 20px;\n}\n\n.footer-row svg {\n  height: 30px;\n  width: 30px;\n}\n\n.display-items {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2%;\n  padding: 7%;\n  margin-right: 30%;\n  margin-bottom: 4rem;\n}\n\n.item {\n  width: 380px;\n  height: 400px;\n\n  /* border-radius: 2rem; */\n  box-shadow: 0 4px 21px -1px rgba(6, 177, 154, 0.79);\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.food-image {\n  width: 90%;\n  margin-bottom: 0.5rem;\n}\n\n.image-comment {\n  display: flex;\n}\n\n.food-title {\n  margin-left: 1rem;\n}\n\n.like {\n  display: flex;\n  flex-flow: column;\n  align-items: flex-end;\n  margin-right: 3rem;\n  margin-top: -2rem;\n}\n\n.likes {\n  font-size: 15px;\n  margin-left: 19rem;\n}\n\n#comment,\n#reservation {\n  background-color: rgb(20, 75, 63);\n  color: rgb(231, 219, 195);\n  align-items: center;\n  text-align: center;\n  padding: 1%;\n  font-size: 25px;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  margin-left: 140px;\n  margin-top: 10px;\n}\n\n.heart {\n  width: 20px;\n  height: 30px;\n}\n\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 6rem;\n  overflow: scroll;\n}\n\n.hide {\n  display: none;\n}\n\n.popup-inside {\n  background-color: #fff;\n  max-width: 100%;\n  width: 600px;\n  padding: 30px 50px;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  text-align: center;\n}\n\n.close-div {\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  margin-top: 5rem;\n}\n\n.popup-inside i {\n  font-weight: 600;\n  font-size: 1.2rem;\n  color: #000;\n  cursor: pointer;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 1rem;\n  align-items: center;\n  justify-content: stretch;\n}\n\ntextarea {\n  background-color: #fff;\n  border: 1px solid #000;\n}\n\nbutton {\n  background-color: rgb(20, 75, 63);\n  color: rgb(231, 219, 195);\n  align-items: center;\n  text-align: center;\n  padding: 1rem;\n  font-size: 25px;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},654:(n,e,t)=>{var o=t(379),i=t.n(o),r=t(795),a=t.n(r),A=t(569),s=t.n(A),c=t(565),l=t.n(c),d=t(216),p=t.n(d),m=t(589),g=t.n(m),u=t(426),f={};f.styleTagTransform=g(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),i()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},a=[],A=0;A<n.length;A++){var s=n[A],c=o.base?s[0]+o.base:s[0],l=r[c]||0,d="".concat(c," ").concat(l);r[c]=l+1;var p=t(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var g=i(m,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:g,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var A=t(r[a]);e[A].references--}for(var s=o(n,i),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},138:(n,e,t)=>{t.a(n,(async(n,e)=>{try{t(826),t(572);var o=t(116),i=t(660);t(654);const n="https://themealdb.com/api/json/v1/1/categories.php";await(0,i.Z)(n);const r=document.querySelectorAll("#comment");(0,o.Z)(r,n),e()}catch(n){e(n)}}),1)},116:(n,e,t)=>{t.d(e,{Z:()=>a});const o=()=>document.querySelectorAll(".comment").length,i=async n=>{const e=await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/TJyGMNz4sg9mjXTgep4V/comments?item_id=item${n}`);return await e.json()},r=async n=>{const e=document.querySelector(".popup-container");e.innerHTML="";const t=await i(n[0].idCategory),r=`\n    <div class="popup">\n         <div class="popup-inside">\n            <div class="close-div">\n                <i class="fas fa-times close"></i>\n            </div>\n            <img class="food-img" src="${n[0].strCategoryThumb}" alt="${n[0].strCategory}">\n            <h2 class="food-title">${n[0].strCategory}</h2>\n            <p class="food-description">${n[0].strCategoryDescription}</p>\n            <div class="comments">\n                <h2 class="comment-title">Comments <span class="count">(1)</span></h2>\n            </div>\n            <form class="comment-form">\n                <input type="text" class="name" id="name" name="name" placeholder="Your Name" required>\n                <textarea name="comment" placeholder="Your Insights" required></textarea>\n                <button type="submit" class="submit">Comment</button>\n            </form>\n        </div>\n    </div>\n  `;e.innerHTML=r;const a=document.querySelector(".comments");a.innerHTML='\n    <h2 class="comment-title">Comments <span class="count"></span></h2>\n  ',t.forEach((n=>{const e=document.createElement("div");e.classList.add("comment"),e.innerHTML=`\n        <span class="comment-date">${n.creation_date}</span>\n        <span class="comment-name">${n.username}: </span>\n        <span class="comment-body">${n.comment}</span>\n    `,a.appendChild(e)}));const A=document.querySelectorAll(".close"),s=A[A.length-1];s.addEventListener("click",(()=>{s.closest(".popup").classList.toggle("hide")}));const c=document.querySelector(".count"),l=o();c.textContent=`(${l})`;const d=document.querySelector(".comment-form");d.addEventListener("submit",(async e=>{e.preventDefault();const t=n[0].idCategory,i=d.name.value,r=d.comment.value;await(async(n,e,t)=>{const o={item_id:`item${n}`,username:e,comment:t};return await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/TJyGMNz4sg9mjXTgep4V/comments/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)})})(t,i,r);const A=document.createElement("div");A.classList.add("comment"),A.innerHTML=`\n    <span class="comment-date">${(new Date).toLocaleString()}</span>\n    <span class="comment-name">${i}: </span>\n    <span class="comment-body">${r}</span>\n  `,a.appendChild(A);const s=document.querySelector(".count"),c=o();s.textContent=`(${c})`,d.reset()}))},a=(n,e)=>{n.forEach((n=>{n.addEventListener("click",(async()=>{const t=await fetch(e),o=await t.json(),{categories:a}=o,A=a.filter((e=>e.idCategory===n.dataset.id));await i(n.dataset.id);r(A)}))}))}},660:(n,e,t)=>{t.d(e,{Z:()=>a});const o="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/",i="TJyGMNz4sg9mjXTgep4V",r=n=>`\n    <div class='item'>\n      <img class="food-image" src="${n.strCategoryThumb}" alt="">\n        <h2 class="food-title">${n.strCategory}</h2>\n            <div class="like">\n            <svg class="heart" id=${n.idCategory}>\n                    <use href="icons.svg#heart-like-red"></use>\n                </svg>\n                </div>\n             <div class="likes"><span></span>likes</div> \n            <button type="button" id="comment" data-id="${n.idCategory}">Comments</button>              \n            <button type="button" id="reservation"> Resevation</button>\n      </div>\n  `,a=async n=>{const e=document.querySelector(".display-items"),t=await fetch(n),a=await t.json(),A=a.categories.map(r);e.innerHTML=A.join("");const s=a.categories.length;document.getElementById("count-items").textContent=`${s}`;const c=document.querySelectorAll(".heart");return c.forEach((n=>{n.addEventListener("click",(()=>{const e=n.parentElement.nextElementSibling.firstElementChild,t=e.textContent;e.textContent=+t+1,(async n=>{if(!(await fetch(`${o}${i}/likes`,{method:"POST",body:JSON.stringify({item_id:n}),headers:{"Content-Type":"application/json"}})).ok)throw new Error("Failed to create like")})(n.id)}))})),c.forEach((n=>{const e=n.parentElement.nextElementSibling.firstElementChild;(async n=>{const e=await fetch(`${o}${i}/likes?item_id=itemundefined`);if(!e.ok)throw new Error("Failed to retrieve likes");return await e.json()})().then((t=>{t.forEach((t=>{t.item_id===n.id&&(e.textContent=t.likes)}))}))})),a}},826:(n,e,t)=>{n.exports=t.p+"icons.svg"},572:(n,e,t)=>{n.exports=t.p+"logo.png"}},n=>{n(n.s=138)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,